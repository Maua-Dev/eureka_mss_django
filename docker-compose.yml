version: '3'

services:
  database:
    image: 'postgres:latest'
    restart: always
    ports:
      - ${DB_PORT}:5432
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - postgres-network
    volumes:
      - pgdata:/var/lib/postgresql/data

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      - MINIO_ROOT_USER=${LOCALSTACK_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${LOCALSTACK_SECRET_KEY}
    volumes:
      - minio-data:/data
    command: server /data --console-address :9001

  create-bucket:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c " /usr/bin/mc config host add --api s3v4 s3 http://minio:9000 ${LOCALSTACK_ACCESS_KEY} ${LOCALSTACK_SECRET_KEY}; /usr/bin/mc mb s3/eureka-bucket-test  /usr/bin/mc policy set public s3/eureka-bucket-test; "

  web:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8000:8000"
    environment:
      STAGE: ${STAGE}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: database
      DB_PORT: ${DB_PORT}
      LOCALSTACK_ACCESS_KEY: ${LOCALSTACK_ACCESS_KEY}
      LOCALSTACK_SECRET_KEY: ${LOCALSTACK_SECRET_KEY}
      S3_BUCKET_NAME: eureka-bucket-test
    volumes:
      - .:/app
    depends_on:
      - database
      - minio
      - create-bucket
    networks:
      - postgres-network

networks:
  postgres-network:
    driver: bridge

volumes:
  pgdata:
  pgadmin-data:
  minio-data:
