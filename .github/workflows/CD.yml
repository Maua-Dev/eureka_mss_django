name: Django CD

on:
  workflow_dispatch:
  push:
    branches:
      - dev
      - deploy-eureka

jobs:
  DeployToAWS:
    environment: 
      name: dev
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
        - uses: actions/checkout@v3
        - name: Setup AWS Credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-region: sa-east-1
            role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GithubActionsRole
            role-session-name: github-action

        - name: Setting stage and stack name
          run: |
              STAGE=dev 
              PROJECT_NAME=Eureka2024
              echo "PROJECT_NAME=${PROJECT_NAME}" >> $GITHUB_ENV
              echo "STACK_NAME=${PROJECT_NAME}Stack${STAGE}" >> $GITHUB_ENV

        - uses: actions/setup-python@v4
          with:
            python-version: '3.11'
    
        - name: Installing Dependencies to Deploy
          run: |
            npm install -g aws-cdk
            cd iac
            pip install -r requirements.txt

        - name: Setup env
          run: |
            echo "AWS_REGION=${{ vars.AWS_REGION }}" >> $GITHUB_ENV
            echo "AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}" >> $GITHUB_ENV
            echo "GITHUB_REF_NAME=${{ github.ref_name }}" >> $GITHUB_ENV
            echo "REPOSITORY_NAME=eureka-2024-repository-${{ github.ref_name }}" >> $GITHUB_ENV

            echo ${{ env.AWS_REGION }}
            echo ${{ env.AWS_ACCOUNT_ID }}
            echo ${{ env.GITHUB_REF_NAME }}
            echo ${{ env.REPOSITORY_NAME }}

        - name: Pushing Docker image to AWS ECR repository
          run: |
            if ! aws ecr describe-repositories --repository-names ${{ env.REPOSITORY_NAME }} >/dev/null 2>&1; then
            aws ecr create-repository --repository-name ${{ env.REPOSITORY_NAME }} --image-scanning-configuration scanOnPush=true
            fi
            aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS  --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
            docker build -t ${{ env.REPOSITORY_NAME }} .
            docker tag ${{ env.REPOSITORY_NAME }}:latest ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.REPOSITORY_NAME }}:latest
            docker push ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.REPOSITORY_NAME }}:latest

        - name: Deploying CDK
          run: |
            cd iac
            cdk synth
            cdk deploy --require-approval never
          env:
            STAGE: ${{ env.GITHUB_REF_NAME }}
            AWS_REGION: ${{ env.AWS_REGION }}
            STACK_NAME: ${{ env.STACK_NAME }}
            REPOSITORY_NAME: ${{ env.REPOSITORY_NAME }}